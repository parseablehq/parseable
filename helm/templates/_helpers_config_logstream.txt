#!/bin/sh
set -e ; # Have script exit in the event of a failed command.
IFS=$' \t\r\n'

createStream() {
  STREAM=$1
  echo;
  echo \"Creating the log stream $STREAM\";

  response=$(curl  -sS --header 'Content-Type: application/json' -u "$P_USERNAME":"$P_PASSWORD" -w '\n\n%{http_code}' --location --request PUT "http://{{ include "parseable.fullname" . }}.{{ .Release.Namespace }}:{{ $.Values.parseable.service.port }}/api/v1/logstream/$STREAM");

  http_code=$(tail -n1 <<< "$response")
  content=$(sed '$ d' <<< "$response")
  echo \"status code: $http_code\"
  echo \"response message: $content\"
}

setRetention() {
  STREAM=$1
  ACTION=$2
  DURATION=$3

  echo;
  echo \"Setting the retention for $STREAM\";

  response=$(curl  -sS --header 'Content-Type: application/json' -u "$P_USERNAME":"$P_PASSWORD" -w '\n\n%{http_code}' --location --request POST "http://{{ include "parseable.fullname" . }}.{{ .Release.Namespace }}:{{ $.Values.parseable.service.port }}/api/v1/logstream/$STREAM/retention" --data "[{\"description\":\"$ACTION logs after $DURATION\",\"action\":\"$ACTION\",\"duration\":\"$DURATION\"}]");

  http_code=$(tail -n1 <<< "$response")
  content=$(sed '$ d' <<< "$response")
  echo \"status code: $http_code\"
  echo \"response message: $content\"
}

{{ if .Values.parseable.logstream }}
# Create the logstream
{{- range .Values.parseable.logstream }}
createStream {{.name}}
setRetention {{.name}} {{.retention.action}} {{.retention.duration}}
{{- end }}
{{- end }}
