apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "collector.fullname" . }}
  labels:
    {{- include "collector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.collector.replicaCount }}
  selector:
    matchLabels:
      {{- include "collector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.collector.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "collector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.collector.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "collector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.collector.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.collector.securityContext | nindent 12 }}
          image: "{{ .Values.collector.image.repository }}:{{ .Values.collector.image.tag | default .Chart.AppVersion }}"
          args: ["--config","config.yaml"]
          volumeMounts:
          - name: config-volume
            mountPath: /config.yaml
            readOnly: true
            subPath: config.yaml
          imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
          env:
            {{- range $key, $value :=  .Values.collector.env }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
            - name: PARSEABLE_URL
            {{- if eq .Values.collector.parseable_server.url "" }}
              value: http://{{ include "collector.fullname" . }}{{ .Release.namespace }}.svc.cluster.local:{{ .Values.collector.service.port }}
            {{- else }}
              value: {{ .Values.collector.parseable_server.url }}
            {{- end }}
            - name: PARSEABLE_USERNAME
              value: {{ .Values.collector.parseable_server.username }}
            - name: PARSEABLE_PASSWORD
              value: {{ .Values.collector.parseable_server.password }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.collector.resources | nindent 12 }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "collector.fullname" . }}
      {{- with .Values.collector.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.collector.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.collector.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ if eq .Values.demo.app.create true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.demo.app.name }}
  namespace: {{ .Values.demo.app.namespace }}
spec:
  selector:
    matchLabels:
      {{- with .Values.demo.app.labels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  replicas: 2
  template:
    metadata:
      labels:
      {{- with .Values.demo.app.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: log-generator
        image: mingrammer/flog
        args: ["-f","json","-d","2s","-n","200","-l"]
        ports:
        - containerPort: 80 
{{ end }}
