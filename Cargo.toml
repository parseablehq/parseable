[package]
name = "parseable"
version = "1.7.0"
authors = ["Parseable Team <hi@parseable.com>"]
edition = "2021"
rust-version = "1.83.0"
categories = ["logging", "observability", "log analytics"]
build = "build.rs"

[dependencies]
# Arrow and DataFusion ecosystem
arrow-array = { version = "53.0.0" }
arrow-flight = { version = "53.0.0", features = ["tls"] }
arrow-ipc = { version = "53.0.0", features = ["zstd"] }
arrow-json = "53.0.0"
arrow-schema = { version = "53.0.0", features = ["serde"] }
arrow-select = "53.0.0"
datafusion = "44.0.0"
object_store = { version = "0.11.2", features = ["cloud", "aws", "azure"] }
parquet = "53.0.0"

# Web server and HTTP-related
actix-cors = "0.7.0"
actix-web = { version = "4.9.0", features = ["rustls-0_22"] }
actix-web-httpauth = "0.8"
actix-web-prometheus = { version = "0.1" }
actix-web-static-files = "4.0"
http = "0.2.7"
http-auth-basic = "0.3.3"
mime = "0.3.17"
tonic = { version = "0.12.3", features = ["tls", "transport", "gzip", "zstd"] }
tonic-web = "0.12.3"
tower-http = { version = "0.6.1", features = ["cors"] }
url = "2.4.0"

# Authentication and Security
argon2 = "0.5.0"
base64 = "0.22.0"
cookie = "0.18.1"
hex = "0.4"
openid = { version = "0.15.0", default-features = false, features = ["rustls"] }
rustls = "0.22.4"
rustls-pemfile = "2.1.2"
sha2 = "0.10.8"

# Serialization and Data Formats
byteorder = "1.4.3"
prost = "0.13.3"
serde = { version = "1.0", features = ["rc", "derive"] }
serde_json = "1.0"
serde_repr = "0.1.17"

# Async and Runtime
async-trait = "0.1.82"
futures = "0.3"
futures-util = "0.3.28"
tokio = { version = "1.28", default-features = false, features = [
    "sync",
    "macros",
    "fs",
] }
tokio-stream = { version = "0.1", features = ["fs"] }

# Logging and Metrics
opentelemetry-proto = { git = "https://github.com/parseablehq/opentelemetry-rust", branch = "fix-metrics-u64-serialization" }
prometheus = { version = "0.13", features = ["process"] }
prometheus-parse = "0.2.5"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# Time and Date
chrono = "0.4"
chrono-humanize = "0.2"
humantime = "2.1.0"
humantime-serde = "1.1"

# File System and I/O
bzip2 = { version = "*", features = ["static"] }
fs_extra = "1.3"
path-clean = "1.0.1"
relative-path = { version = "1.7", features = ["serde"] }
xz2 = { version = "*", features = ["static"] }

# CLI and System
clap = { version = "4.1", default-features = false, features = [
    "std",
    "color",
    "help",
    "derive",
    "env",
    "cargo",
    "error-context",
] }
crossterm = "0.28.1"
hostname = "0.4.0"
human-size = "0.4"
num_cpus = "1.15"
sysinfo = "0.31.4"
thread-priority = "1.0.0"
uptime_lib = "0.3.0"

# Kafka
rdkafka = { version = "0.36.2", default-features = false, features = ["tokio"] }

# Utility Libraries
anyhow = { version = "1.0", features = ["backtrace"] }
bytes = "1.4"
clokwerk = "0.4"
derive_more = "0.99.18"
hashlru = { version = "0.11.0", features = ["serde"] }
itertools = "0.13.0"
lazy_static = "1.4"
nom = "7.1.3"
once_cell = "1.17.1"
rand = "0.8.5"
regex = "1.7.3"
reqwest = { version = "0.11.27", default-features = false, features = [
    "rustls-tls",
    "json",
    "gzip",
    "brotli",
] } # cannot update cause rustls is not latest `see rustls`
semver = "1.0"
static-files = "0.2"
thiserror = "2.0.0"
ulid = { version = "1.0", features = ["serde"] }
xxhash-rust = { version = "0.8", features = ["xxh3"] }

[build-dependencies]
cargo_toml = "0.20.1"
prost-build = "0.13.3"
sha1_smol = { version = "1.0", features = ["std"] }
static-files = "0.2"
ureq = "2.6"
url = "2.4.0"
vergen = { version = "8.1", features = ["build", "git", "cargo", "gitcl"] }
zip = { version = "2.2.0", default-features = false, features = ["deflate"] }

[dev-dependencies]
maplit = "1.0"
rstest = "0.23.0"
arrow = "53.0.0"

[package.metadata.parseable_ui]
assets-url = "https://github.com/parseablehq/console/releases/download/v0.9.14/build.zip"
assets-sha1 = "789e0888883250b928bd71e63522ab8159532992"

[features]
debug = []

[profile.release-lto]
inherits = "release"
lto = "fat"
codegen-units = 1

# adding rdkafka here because, for unsupported platforms, cargo skips other deps which come after this
[target.'cfg(all(target_os = "linux", target_arch = "x86_64"))'.dependencies]
rdkafka = { version = "0.36.2", default-features = false, features = ["tokio"] }
